name: Intel compilers

# This workflow will test Basix built using Intel compilers

on:
  push:
    branches:
      - "**"
    tags:
      - "v*"
  schedule:
    # '*' is a special character in YAML, so string must be quoted
    - cron: "0 2 * * TUE"
  pull_request:
    branches:
      - main
  workflow_dispatch: ~

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    container: ubuntu:latest

    env:
      CC: icx
      CXX: icpx
      DEBIAN_FRONTEND: noninteractive

    steps:
      - uses: actions/checkout@v2
      - name: Install Intel compilers
        run: |
          # apt-get update && apt-get install -y wget gnupg git python3-pip cmake
          apt-get update && apt-get install -y cmake git gnupg ninja-build python3-pip wget ninja-build
      - name: Install Intel compilers
        run: |
          wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          echo "deb https://apt.repos.intel.com/oneapi all main" | tee /etc/apt/sources.list.d/oneAPI.list
          apt update
          apt install -y intel-oneapi-common-vars intel-oneapi-compiler-dpcpp-cpp

      - name: Install Basix
        run: |
          . /opt/intel/oneapi/setvars.sh
          # . /opt/intel/oneapi/mkl/latest/env/vars.sh
          export CMAKE_ARGS="-DDOWNLOAD_XTENSOR_LIBS:BOOL=true"
          pip -v install .[test]
      - name: Run units tests
        run: |
          pip install pytest-xdist
          pytest -v -n auto --durations 20 test/
