# This workflow will install Python dependencies, run tests and lint
# with a single version of Python For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Basix CI

on: [push, pull_request]

jobs:
  build:
    name: Build and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pybind11
        run: pip install pybind11
      - name: Install dependencies (non-Python, Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y doxygen libopenblas-dev liblapack-dev ninja-build
      - name: Build C++ documentation (Linux)
        if: runner.os == 'Linux'
        run: |
          cd cpp/doc && doxygen
      - name: Install dependencies (non-Python, macOS)
        if: runner.os == 'macOS'
        run: brew install ninja
      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 --statistics test/
      - name: Install Basix C++
        run: |
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Developer -B build-dir -S .
          cmake --build build-dir
          sudo cmake --install build-dir
      - name: Build Basix Python
        run: |
          cd python
          pip install .
      - name: Build Python documentation (Linux)
        if: runner.os == 'Linux'
        run: |
          pip install sphinx
          cd python/doc && make html
      - name: Run units tests
        run: |
          pip install pytest pytest-xdist numpy sympy numba scipy
          pytest -v -n auto --durations 20 test/
      - name: Checkout FEniCS/docs
        if: ${{ github.repository == 'FEniCS/basix' && github.ref == 'refs/heads/main' && runner.os == 'Linux' }}
        uses: actions/checkout@v2
        with:
          repository: "FEniCS/docs"
          path: "docs"
          ssh-key: "${{ secrets.SSH_GITHUB_DOCS_PRIVATE_KEY }}"
      - name: Push documentation to repository FEniCS/docs
        if: ${{ github.repository == 'FEniCS/basix' && github.ref == 'refs/heads/main' && runner.os == 'Linux' }}
        run: |
          cd docs
          git config --global user.email "fenics@github.com"
          git config --global user.name "FEniCS GitHub Actions"
          git rm -r basix/main/cpp
          git rm -r --ignore-unmatch basix/main/python
          mkdir -p basix/main/cpp
          mkdir -p basix/main/python
          cp -r ../cpp/doc/html/* basix/main/cpp
          cp -r ../python/doc/build/html/* basix/main/python
          git add --all
          git commit --allow-empty -m "C++ FEniCS/basix@${{ github.sha }}"
          git push
