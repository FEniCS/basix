name: Basix CI

# This workflow will install Python dependencies, run tests and lint
# with a single version of Python For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

on:
  push:
    branches:
      - "**"
    tags:
      - "*.*.*.*"
      - "*.*.*"
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: sudo apt-get install -y doxygen libopenblas-dev liblapack-dev ninja-build

      - name: Install Basix
        run: pip -v install .[ci]

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 --statistics test/
          flake8 --statistics python/
          flake8 --statistics demo/python

      - name: pydocstyle checks
        run: |
          pip install pydocstyle
          python -m pydocstyle python/basix

      - name: Run units tests
        run: |
          pytest -n auto --durations 20 test/

      - name: Run python demos
        run: |
          pytest demo/python/test.py

      - name: Build documentation
        run: |
          pip install git+https://github.com/FEniCS/ufl.git
          export BASIX_VERSION=`python3 -c "import basix; print(basix.__version__)"`
          cd doc/cpp
          doxygen
          cd ../python
          make html

      - name: Upload C++ documentation artifact
        uses: actions/upload-artifact@v2
        with:
          name: doc-cpp
          path: |
            doc/cpp/html
          retention-days: 2
          if-no-files-found: error
      - name: Upload Python documentation artifact
        uses: actions/upload-artifact@v2
        with:
          name: doc-python
          path: |
            doc/python/build/html
          retention-days: 2
          if-no-files-found: error

      - name: Build website documentation
        run: |
          export BASIX_VERSION=`python3 -c "import basix; print(basix.__version__)"`
          cd doc/web
          python make_html.py

      - name: Set version name
        if: ${{ github.repository == 'FEniCS/basix' && ( github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') ) && matrix.python-version == '3.10' }}
        run: |
          echo "VERSION_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Build documentation to upload
        if: ${{ github.repository == 'FEniCS/basix' && ( github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') ) && matrix.python-version == '3.10' }}
        run: |
          export BASIX_VERSION=`python3 -c "import basix; print(basix.__version__)"`
          cd doc/web
          python make_html.py --url https://docs.fenicsproject.org/basix/${{ env.VERSION_NAME }}
      - name: Checkout FEniCS/docs
        if: ${{ github.repository == 'FEniCS/basix' && ( github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') ) && matrix.python-version == '3.10' }}
        uses: actions/checkout@v2
        with:
          repository: "FEniCS/docs"
          path: "docs"
          ssh-key: "${{ secrets.SSH_GITHUB_DOCS_PRIVATE_KEY }}"
      - name: Copy documentation into repository
        if: ${{ github.repository == 'FEniCS/basix' && ( github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') ) && matrix.python-version == '3.10' }}
        run: |
          cd docs
          git rm -r --ignore-unmatch basix/${{ env.VERSION_NAME }}
          mkdir -p basix/${{ env.VERSION_NAME }}
          cp -r ../doc/web/html/* basix/${{ env.VERSION_NAME }}
      - name: Commit and push documentation to FEniCS/docs
        if: ${{ github.repository == 'FEniCS/basix' && ( github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') ) && matrix.python-version == '3.10' }}
        run: |
          cd docs
          git config --global user.email "fenics@github.com"
          git config --global user.name "FEniCS GitHub Actions"
          git add --all
          git commit --allow-empty -m "Update Basix docs FEniCS/basix@${{ github.sha }}"
          git push
