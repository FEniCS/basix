name: Spack install

on:
  # Uncomment the below 'push' to trigger on push
  # push:
  #  branches:
  #    - "**"
  schedule:
    # '*' is a special character in YAML, so string must be quoted
    - cron: "0 2 * * TUE"
  workflow_dispatch:
    inputs:
      spack_repo:
        description: "Spack repository to test"
        default: "spack/spack"
        type: string
      spack_ref:
        description: "Spack repository branch/tag to test"
        default: "develop"
        type: string
      basix_version:
        description: "Basix version"
        default: "main"
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    container: ubuntu:latest
    steps:
      - name: Install Spack requirements
        run: |
          apt-get -y update
          apt-get install -y bzip2 curl file git gzip make patch python3-minimal tar xz-utils
          apt-get install -y g++ gfortran  # compilers

      - name: Get Spack
        if: github.event_name != 'workflow_dispatch'
        uses: actions/checkout@v4
        with:
          path: ./spack
          repository: spack/spack
      - name: Get Spack
        if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v4
        with:
          path: ./spack
          repository: ${{ github.event.inputs.spack_repo }}
          ref: ${{ github.event.inputs.spack_ref }}

      - name: Install Basix and run tests
        if: github.event_name != 'workflow_dispatch'
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env create main
          spack env activate main
          spack add py-fenics-basix
          spack install --test=root
      - name: Install Basix and run tests
        if: github.event_name == 'workflow_dispatch'
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env create main
          spack env activate main
          spack add py-fenics-basix@${{ github.event.inputs.basix_version }}
          spack install --test=root
