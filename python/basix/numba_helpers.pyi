from typing import Dict as _Dict, List as _ListT

def apply_dof_transformation(tdim: int, edge_count: int, face_count: int, entity_transformations: _Dict[str, _nda], entity_dofs: _ListT[_ListT[int]], data: _nda, cell_info: int, face_types: _ListT[str]): ...
def apply_dof_transformation_interval(entity_transformations: _Dict[str, _nda_f64], entity_dofs: _Dict[str, _nda_i32], data: _nda, cell_info: int): ...
def apply_dof_transformation_triangle(entity_transformations: _Dict[str, _nda_f64], entity_dofs: _Dict[str, _nda_i32], data: _nda, cell_info: int): ...
def apply_dof_transformation_quadrilateral(entity_transformations: _Dict[str, _nda_f64], entity_dofs: _Dict[str, _nda_i32], data: _nda, cell_info: int): ...
def apply_dof_transformation_tetrahedron(entity_transformations: _Dict[str, _nda_f64], entity_dofs: _Dict[str, _nda_i32], data: _nda, cell_info: int): ...
def apply_dof_transformation_hexahedron(entity_transformations: _Dict[str, _nda_f64], entity_dofs: _Dict[str, _nda_i32], data: _nda, cell_info: int): ...
def apply_dof_transformation_prism(entity_transformations: _Dict[str, _nda_f64], entity_dofs: _Dict[str, _nda_i32], data: _nda, cell_info: int): ...
def apply_dof_transformation_pyramid(entity_transformations: _Dict[str, _nda_f64], entity_dofs: _Dict[str, _nda_i32], data: _nda, cell_info: int): ...
def apply_dof_transformation_to_transpose(tdim: int, edge_count: int, face_count: int, entity_transformations: _ListT[int], entity_dofs: _ListT[int], data: _nda, cell_info: int, face_types: _ListT[str]): ...
def apply_dof_transformation_to_transpose_interval(entity_transformations: _Dict[str, _nda_f64], entity_dofs: _Dict[str, _nda_i32], data: _nda, cell_info: int): ...
def apply_dof_transformation_to_transpose_triangle(entity_transformations: _Dict[str, _nda_f64], entity_dofs: _Dict[str, _nda_i32], data: _nda, cell_info: int): ...
def apply_dof_transformation_to_transpose_quadrilateral(entity_transformations: _Dict[str, _nda_f64], entity_dofs: _Dict[str, _nda_i32], data: _nda, cell_info: int): ...
def apply_dof_transformation_to_transpose_tetrahedron(entity_transformations: _Dict[str, _nda_f64], entity_dofs: _Dict[str, _nda_i32], data: _nda, cell_info: int): ...
def apply_dof_transformation_to_transpose_hexahedron(entity_transformations: _Dict[str, _nda_f64], entity_dofs: _Dict[str, _nda_i32], data: _nda, cell_info: int): ...
def apply_dof_transformation_to_transpose_prism(entity_transformations: _Dict[str, _nda_f64], entity_dofs: _Dict[str, _nda_i32], data: _nda, cell_info: int): ...
def apply_dof_transformation_to_transpose_pyramid(entity_transformations: _Dict[str, _nda_f64], entity_dofs: _Dict[str, _nda_i32], data: _nda, cell_info: int): ...
